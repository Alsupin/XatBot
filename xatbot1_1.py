# -*- coding: utf-8 -*-
"""xatbot1.1

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12eFdqWWPxtRjUfcuMvHcyySBkWvW5RuX
"""



# Instal·lar les biblioteques necessàries
!pip install -U google-genai requests beautifulsoup4

import requests
from bs4 import BeautifulSoup
from google import genai
from google.colab import userdata

# ==============================
# CONFIGURACIÓ DE L'API
# ==============================
# Obtenir la clau API des del Colab
GOOGLE_API_KEY = userdata.get("GOOGLE_API_KEY")
if not GOOGLE_API_KEY:
    print("⚠️ No s'ha trobat la clau API. Configura-la a Colab abans d'executar el programa.")
    exit()

# Crear el client de GenAI amb la clau API
client = genai.Client(api_key=GOOGLE_API_KEY)

# ==============================
# WEB SCRAPING DE LA URL
# ==============================
# URL de la pàgina web a analitzar (canvia-la per la teva URL)
url = "https://alozano.inscastellbisbal.net/"

def obtenir_contingut(url):
    try:
        resposta = requests.get(url)
        if resposta.status_code == 200:
            # Processar el contingut HTML amb BeautifulSoup
            soup = BeautifulSoup(resposta.text, 'html.parser')
            # Extreure tots els paràgrafs
            paragrafs = soup.find_all('p')
            # Unir el text de cada paràgraf
            contingut = "\n".join([p.get_text() for p in paragrafs])
            return contingut
        else:
            return f"Error: Codi d'estat {resposta.status_code}"
    except Exception as e:
        return f"Error en obtenir el contingut: {e}"

# Obtenir el contingut de la pàgina web
contingut_web = obtenir_contingut(url)
print("Contingut extret de la URL:\n", contingut_web[:500], "...\n")  # Mostra els primers 500 caràcters

# ==============================
# INSTRUCCIONS DEL SISTEMA
# ==============================
# Afegir al sistema la informació del contingut web
system_instruction = f"""
Ets un assistent d'intel·ligència artificial dissenyat per ajudar els usuaris de manera clara, precisa i educada.
Has llegit i analitzat el següent contingut d'una pàgina web:
{contingut_web[:1000]}  # Només s'afegeixen els primers 1000 caràcters per evitar excedir el límit de tokens.
Proporciona respostes concretes i senzilles relacionades amb aquesta pàgina web.
"""

# Crear la sessió de xat amb el model
chat = client.chats.create(
    model="gemini-2.0-flash",
    config=genai.types.GenerateContentConfig(
        system_instruction=system_instruction,
        temperature=0.7,
        max_output_tokens=200
    )
)

# ==============================
# BUCLE DEL XAT
# ==============================
print("\n💬 XatBot activat! Escriu 'sortir' per acabar la conversa.\n")

while True:
    try:
        # Llegir la pregunta de l'usuari
        prompt = input("👤 Usuari: ").strip()
        # Comprovar si l'usuari vol sortir
        if prompt.lower() == "sortir":
            print("👋 XatBot: Fins aviat!")
            break

        # Combinar el prompt amb la referència al contingut web si es desitja
        prompt_complet = f"Tenint en compte el contingut de la pàgina web, {prompt}"

        # Enviar el missatge al model i obtenir la resposta
        resposta = chat.send_message(prompt_complet)
        print(f"🤖 XatBot: {resposta.text.strip()}\n")
    except Exception as e:
        # Gestionar errors de comunicació amb l'API
        print(f"⚠️ Error en la comunicació amb Gemini: {e}")

# ==============================
# FI DE LA SESSIÓ
# ==============================